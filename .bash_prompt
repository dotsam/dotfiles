if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM='xterm-256color';
fi;

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ -z "$PROMPT_FQDN" ]; then
	PROMPT_FQDN="samedwards\.ca";
fi;

if [ "$color_prompt" = yes ]; then
    _ROOT_COLOR=31  # red
    _USER_COLOR=32  # green

    if [ "`id -u`" -eq 0 ]; then
	PS1="\[\033[01;${_ROOT_COLOR}m\]$(hostname -f|sed 's/\.'${PROMPT_FQDN}'//')\[\033[01;34m\] \w #\[\033[00m\] "
    else
	PS1="\[\033[01;${_USER_COLOR}m\]\u@$(hostname -f|sed 's/\.'${PROMPT_FQDN}'//')\[\033[01;34m\] \w $\[\033[00m\] "
    fi
else
    PS1='\u@\h: \w \$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac